<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="17324" started-at="2020-01-06T08:24:36Z" finished-at="2020-01-06T08:24:53Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="17324" started-at="2020-01-06T08:24:36Z" finished-at="2020-01-06T08:24:53Z">
      <class name="com.qa.testscript.Demo">
        <test-method status="PASS" signature="Report_setup()[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b]" name="Report_setup" is-config="true" duration-ms="230" started-at="2020-01-06T08:24:36Z" finished-at="2020-01-06T08:24:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Report_setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b]" name="setup" is-config="true" duration-ms="11321" started-at="2020-01-06T08:24:36Z" finished-at="2020-01-06T08:24:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestResult)[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b]" name="beforeMethod" is-config="true" duration-ms="13" started-at="2020-01-06T08:24:47Z" finished-at="2020-01-06T08:24:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_LA_01 status=FAILURE method=Demo.TC_LA_01()[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="TC_LA_01()[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b]" name="TC_LA_01" duration-ms="79" started-at="2020-01-06T08:24:47Z" description=" user should be able to run the Lead Activity job from Automic" finished-at="2020-01-06T08:24:47Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='c-shellmenu_51']"}
  (Session info: chrome=79.0.3945.88)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'GDC-NITINTH-LPT', ip: '10.9.33.69', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 79.0.3945.88, chrome: {chromedriverVersion: 79.0.3945.36 (3582db32b3389..., userDataDir: C:\Users\NITIN~1.THA\AppDat...}, goog:chromeOptions: {debuggerAddress: localhost:58822}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9d34cda1cdf82b036a53506c2c29a256
*** Element info: {Using=xpath, value=//*[@id='c-shellmenu_51']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='c-shellmenu_51']"}
  (Session info: chrome=79.0.3945.88)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'GDC-NITINTH-LPT', ip: '10.9.33.69', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 79.0.3945.88, chrome: {chromedriverVersion: 79.0.3945.36 (3582db32b3389..., userDataDir: C:\Users\NITIN~1.THA\AppDat...}, goog:chromeOptions: {debuggerAddress: localhost:58822}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9d34cda1cdf82b036a53506c2c29a256
*** Element info: {Using=xpath, value=//*[@id='c-shellmenu_51']}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.qa.testscript.Demo.TC_LA_01(Demo.java:15)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_LA_01 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b]" name="afterMethod" is-config="true" duration-ms="559" started-at="2020-01-06T08:24:47Z" finished-at="2020-01-06T08:24:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_LA_01 status=FAILURE method=Demo.TC_LA_01()[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="run2()[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b]" name="run2" duration-ms="2356" started-at="2020-01-06T08:24:48Z" finished-at="2020-01-06T08:24:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- run2 -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestResult)[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-01-06T08:24:48Z" finished-at="2020-01-06T08:24:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=run2 status=SUCCESS method=Demo.run2()[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-01-06T08:24:50Z" finished-at="2020-01-06T08:24:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=run2 status=SUCCESS method=Demo.run2()[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestResult)[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-01-06T08:24:50Z" finished-at="2020-01-06T08:24:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=run3 status=SUCCESS method=Demo.run3()[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="run3()[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b]" name="run3" duration-ms="2316" started-at="2020-01-06T08:24:50Z" finished-at="2020-01-06T08:24:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- run3 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-01-06T08:24:53Z" finished-at="2020-01-06T08:24:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=run3 status=SUCCESS method=Demo.run3()[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b]" name="tearDown" is-config="true" duration-ms="635" started-at="2020-01-06T08:24:53Z" finished-at="2020-01-06T08:24:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="report_flush()[pri:0, instance:com.qa.testscript.Demo@3c0ecd4b]" name="report_flush" is-config="true" duration-ms="541" started-at="2020-01-06T08:24:53Z" finished-at="2020-01-06T08:24:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report_flush -->
      </class> <!-- com.qa.testscript.Demo -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
